/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1287: {
    BitBrawlers: {
      address: "0x082abd8f4b04ecfe6ed7ffe1515659a0bd9f8750",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mintPet",
          inputs: [
            { name: "_color", type: "uint8", internalType: "enum BitBrawlers.PetColor" },
            { name: "_isClothed", type: "bool", internalType: "bool" },
            { name: "_name", type: "string", internalType: "string" },
            { name: "_ensDomain", type: "string", internalType: "string" },
          ],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAllCatsWithData",
          inputs: [{ name: "_owner", type: "address", internalType: "address" }],
          outputs: [
            { name: "tokenIds", type: "uint256[]", internalType: "uint256[]" },
            {
              name: "stats",
              type: "tuple[]",
              internalType: "struct BitBrawlers.PetStats[]",
              components: [
                { name: "attack", type: "uint256", internalType: "uint256" },
                { name: "defense", type: "uint256", internalType: "uint256" },
                { name: "speed", type: "uint256", internalType: "uint256" },
                { name: "health", type: "uint256", internalType: "uint256" },
                { name: "level", type: "uint256", internalType: "uint256" },
                { name: "color", type: "uint8", internalType: "enum BitBrawlers.PetColor" },
                { name: "isClothed", type: "bool", internalType: "bool" },
              ],
            },
            {
              name: "metadata",
              type: "tuple[]",
              internalType: "struct BitBrawlers.PetMetadata[]",
              components: [
                { name: "name", type: "string", internalType: "string" },
                { name: "ensDomain", type: "string", internalType: "string" },
                { name: "createdAt", type: "uint256", internalType: "uint256" },
                { name: "battlesWon", type: "uint256", internalType: "uint256" },
                { name: "battlesLost", type: "uint256", internalType: "uint256" },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPetInfo",
          inputs: [{ name: "_tokenId", type: "uint256", internalType: "uint256" }],
          outputs: [
            {
              name: "stats",
              type: "tuple",
              internalType: "struct BitBrawlers.PetStats",
              components: [
                { name: "attack", type: "uint256", internalType: "uint256" },
                { name: "defense", type: "uint256", internalType: "uint256" },
                { name: "speed", type: "uint256", internalType: "uint256" },
                { name: "health", type: "uint256", internalType: "uint256" },
                { name: "level", type: "uint256", internalType: "uint256" },
                { name: "color", type: "uint8", internalType: "enum BitBrawlers.PetColor" },
                { name: "isClothed", type: "bool", internalType: "bool" },
              ],
            },
            {
              name: "metadata",
              type: "tuple",
              internalType: "struct BitBrawlers.PetMetadata",
              components: [
                { name: "name", type: "string", internalType: "string" },
                { name: "ensDomain", type: "string", internalType: "string" },
                { name: "createdAt", type: "uint256", internalType: "uint256" },
                { name: "battlesWon", type: "uint256", internalType: "uint256" },
                { name: "battlesLost", type: "uint256", internalType: "uint256" },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
          outputs: [{ name: "", type: "address", internalType: "address" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
          outputs: [{ name: "", type: "string", internalType: "string" }],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "PetMinted",
          inputs: [
            { name: "owner", type: "address", indexed: true },
            { name: "tokenId", type: "uint256", indexed: true },
            { name: "color", type: "uint8", indexed: false },
            { name: "isClothed", type: "bool", indexed: false },
          ],
        },
      ],
    },
  },
  31337: {
    YourContract: {
      address: "0xc6b8fbf96cf7bbe45576417ec2163acecfa88ecc",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "greeting",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "premium",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setGreeting",
          inputs: [
            {
              name: "_newGreeting",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "totalCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userGreetingCounter",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "GreetingChange",
          inputs: [
            {
              name: "greetingSetter",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newGreeting",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "premium",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 11,
    },
    BitBrawlers: {
      address: "0x196dbcbb54b8ec4958c959d8949ebfe87ac2aaaf",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "battles",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "pet1Id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "pet2Id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "pet1Owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "pet2Owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "winnerId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "timestamp",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "stakeAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "endBattle",
          inputs: [
            {
              name: "_battleId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "feedPet",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_attackBoost",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_defenseBoost",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_speedBoost",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_healthBoost",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAllCats",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "tokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAllCatsWithData",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "tokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "stats",
              type: "tuple[]",
              internalType: "struct BitBrawlers.PetStats[]",
              components: [
                {
                  name: "attack",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "defense",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "speed",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "health",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "level",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "color",
                  type: "uint8",
                  internalType: "enum BitBrawlers.PetColor",
                },
                {
                  name: "isClothed",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "metadata",
              type: "tuple[]",
              internalType: "struct BitBrawlers.PetMetadata[]",
              components: [
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "ensDomain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "createdAt",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "battlesWon",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "battlesLost",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getApproved",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getBattleInfo",
          inputs: [
            {
              name: "_battleId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct BitBrawlers.Battle",
              components: [
                {
                  name: "pet1Id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "pet2Id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "pet1Owner",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "pet2Owner",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "winnerId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "timestamp",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "stakeAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getOwnerPetCount",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPetInfo",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "stats",
              type: "tuple",
              internalType: "struct BitBrawlers.PetStats",
              components: [
                {
                  name: "attack",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "defense",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "speed",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "health",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "level",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "color",
                  type: "uint8",
                  internalType: "enum BitBrawlers.PetColor",
                },
                {
                  name: "isClothed",
                  type: "bool",
                  internalType: "bool",
                },
              ],
            },
            {
              name: "metadata",
              type: "tuple",
              internalType: "struct BitBrawlers.PetMetadata",
              components: [
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "ensDomain",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "createdAt",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "battlesWon",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "battlesLost",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTotalBattles",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isApprovedForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "mintPet",
          inputs: [
            {
              name: "_color",
              type: "uint8",
              internalType: "enum BitBrawlers.PetColor",
            },
            {
              name: "_isClothed",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_ensDomain",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerOf",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ownerPetCount",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "petMetadata",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "ensDomain",
              type: "string",
              internalType: "string",
            },
            {
              name: "createdAt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "battlesWon",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "battlesLost",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "petStats",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "attack",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "defense",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "speed",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "health",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "level",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "color",
              type: "uint8",
              internalType: "enum BitBrawlers.PetColor",
            },
            {
              name: "isClothed",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "safeTransferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setApprovalForAll",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "startBattle",
          inputs: [
            {
              name: "_pet1Id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_pet2Id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_stakeAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supportsInterface",
          inputs: [
            {
              name: "interfaceId",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "ApprovalForAll",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "operator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "approved",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BatchMetadataUpdate",
          inputs: [
            {
              name: "_fromTokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "_toTokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BattleEnded",
          inputs: [
            {
              name: "battleId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "winnerId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BattleStarted",
          inputs: [
            {
              name: "battleId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "pet1Id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "pet2Id",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MetadataUpdate",
          inputs: [
            {
              name: "_tokenId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PetLeveledUp",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "newLevel",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PetMinted",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "color",
              type: "uint8",
              indexed: false,
              internalType: "enum BitBrawlers.PetColor",
            },
            {
              name: "isClothed",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PetStatsUpdated",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "attack",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "defense",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "speed",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "health",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC721IncorrectOwner",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InsufficientApproval",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOperator",
          inputs: [
            {
              name: "operator",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC721NonexistentToken",
          inputs: [
            {
              name: "tokenId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 9,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
